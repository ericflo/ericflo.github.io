<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Eflorenzano.com | Eric Florenzano's Blog]]></title>
  <link href="http://ericflo.github.com/blog/categories/eflorenzano-com/atom.xml" rel="self"/>
  <link href="http://ericflo.github.com/"/>
  <updated>2011-12-31T23:20:33-08:00</updated>
  <id>http://ericflo.github.com/</id>
  <author>
    <name><![CDATA[Eric Florenzano]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Notice Something Different?]]></title>
    <link href="http://ericflo.github.com/blog/2009/02/28/notice-something-different/"/>
    <updated>2009-02-28T17:24:25-08:00</updated>
    <id>http://ericflo.github.com/blog/2009/02/28/notice-something-different</id>
    <content type="html"><![CDATA[<p>
Several months ago after rolling out the lifestreaming features on this site, I became unhappy with the way that the design scaled with the new feature.  Around that time I did a purely-visual refactor (just templates and CSS changed--no code), but it has sat untouched on my hard drive for several months.</p>

<p>Today I ran across that redesign and since it essentially looked complete, I deployed it to the site.  I'm still not very happy with the design, but I think that this time it's at least easier to read than the last one, which had become very cluttered and difficult to navigate and read.</p>

<p>Let me know what you think in the comments.
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's been a wild ride]]></title>
    <link href="http://ericflo.github.com/blog/2008/11/30/its-been-wild-ride/"/>
    <updated>2008-11-30T15:58:11-08:00</updated>
    <id>http://ericflo.github.com/blog/2008/11/30/its-been-wild-ride</id>
    <content type="html"><![CDATA[<p>
This post is my final post in the blog-post-per-day challenge.  There have been days when I really didn't want to blog (resulting in posts <code>like this</code><em>), and there have been days where I was excited about what I was writing about and spent a lot of time on a post (resulting in posts like <code>this one</code></em>).  It was much more difficult and time-consuming than I was expecting.  Another thing I wasn't expecting which actually kept motivating me to write more: actual traffic to this site.  Previously this site saw maybe 100 hits/day due to mostly various google hits on certain Django topics.  When I started doing the blog post-per-day thing, however, this is what my traffic turned into:</p>

<p>.. image:: http://media.eflorenzano.com/img/analytics.png</p>

<p>But as I started to look at where that traffic was coming from, I realized it wasn't organic at all.  <em>(insert sad puppy face here)</em>  In fact, most of the traffic was coming from just a few sites.  Here's what my top 10 referring sites were:</p>

<p>.. image:: http://media.eflorenzano.com/img/analytics-2.png</p>

<p>Once I found out that nearly all my traffic was coming from reddit_, I started to try to cater towards that audience.  To reddit's credit, however, the more I tried to target content towards what I thought redditers would like, the less successful the articles did over there.  Either I was doing a bad job of writing articles for that audience, or they wisened up to my act (I'm thinking the latter is more likely).</p>

<p>I was also very surprised by which articles turned out to be the most popular.  Here's the list of articles that I thought were my best:</p>

<ol>
<li><p><code>Easy Multi-Database Support for Django</code>_</p></li>
<li><p><code>Writing an Markov-Chain IRC Bot with Twisted and Python</code>_</p></li>
<li><p><code>Lambda Calculus</code>_</p></li>
<li><p><code>Drop-dead simple Django caching</code>_</p></li>
<li><p><code>Using CouchDB with Django</code>_</p></li>
<li><p><code>Why CouchDB Rocks</code>_</p></li>
<li><p><code>"Web Hooks"</code>_</p></li>
<li><p><code>Reverse HTTP</code>_</p></li>
</ol>


<p>Here's the list of my top 8 most popular articles over the past few days, in order, by traffic:</p>

<ol>
<li><p><code>Gems of Python</code>_</p></li>
<li><p><code>Why CouchDB Sucks</code>_</p></li>
<li><p><code>It's caches all the way down</code>_</p></li>
<li><p><code>The internet is in immediate danger of collapse</code>_</p></li>
<li><p><code>Why use VARCHAR when you can use TEXT?</code>_</p></li>
<li><p><code>Using CouchDB with Django</code>_</p></li>
<li><p><code>Why CouchDB Rocks</code>_</p></li>
<li><p><code>Secrets of the Django ORM</code>_</p></li>
</ol>


<p>Interestingly enough there are only two posts that appear on both lists.  Really, it surprised me which articles got picked up and which didn't.  I suppose it has something to do with the sensational titles and the sometimes-controversial posts.  Specifically the VARCHAR/TEXT post got much much more push-back than I was expecting.  In hindsight, I was wrong to mention anything other than PostgreSQL and SQLite, as those are what I've actually done the TEXT-only experimentation in.</p>

<p>After doing <code>14 screencasts</code><em> and now <code>30 blog posts</code></em> over the past few months, I'm pretty well spent in terms of creating new, original, content.  That's not to say that I'm going to stop writing here or anything like that, but certainly I won't be posting quite as much.  When I do, it will be because I legitimately have something to say, instead of because of an obligation.</p>

<p>Thanks for visiting my site while I participated in this challenge.  I hope you stick around.</p>

<p>.. <em><code>like this</code>: http://www.eflorenzano.com/blog/post/why-you-should-blog/
.. </em><code>this one</code>: http://www.eflorenzano.com/blog/post/easy-multi-database-support-django/
.. <em>reddit: http://reddit.com/
.. </em><code>Easy Multi-Database Support for Django</code>: http://www.eflorenzano.com/blog/post/easy-multi-database-support-django/
.. <em><code>Writing an Markov-Chain IRC Bot with Twisted and Python</code>: http://www.eflorenzano.com/blog/post/writing-markov-chain-irc-bot-twisted-and-python/
.. </em><code>Lambda Calculus</code>: http://www.eflorenzano.com/blog/post/lambda-calculus/
.. <em><code>Drop-dead simple Django caching</code>: http://www.eflorenzano.com/blog/post/drop-dead-simple-django-caching/
.. </em><code>"Web Hooks"</code>: http://www.eflorenzano.com/blog/post/web-hooks/
.. <em><code>Reverse HTTP</code>: http://www.eflorenzano.com/blog/post/reverse-http/
.. </em><code>Gems of Python</code>: http://www.eflorenzano.com/blog/post/gems-python/
.. <em><code>Why CouchDB Sucks</code>: http://www.eflorenzano.com/blog/post/why-couchdb-sucks/
.. </em><code>It's caches all the way down</code>: http://www.eflorenzano.com/blog/post/its-caches-all-way-down/
.. <em><code>The internet is in immediate danger of collapse</code>: http://www.eflorenzano.com/blog/post/internet-immediate-danger-collapse/
.. </em><code>Why use VARCHAR when you can use TEXT?</code>: http://www.eflorenzano.com/blog/post/why-use-varchar-when-you-can-use-text/
.. <em><code>Using CouchDB with Django</code>: http://www.eflorenzano.com/blog/post/using-couchdb-django/
.. </em><code>Why CouchDB Rocks</code>: http://www.eflorenzano.com/blog/post/why-couchdb-rocks/
.. <em><code>Secrets of the Django ORM</code>: http://www.eflorenzano.com/blog/post/secrets-django-orm/
.. </em><code>14 screencasts</code>: http://showmedo.com/videos/series?name=PPN7NA155
.. _<code>30 blog posts</code>: http://www.eflorenzano.com/blog/archive/2008/11/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog Updated (now with more CouchDB)]]></title>
    <link href="http://ericflo.github.com/blog/2008/11/20/blog-updated-now-more-couchdb/"/>
    <updated>2008-11-20T21:56:20-08:00</updated>
    <id>http://ericflo.github.com/blog/2008/11/20/blog-updated-now-more-couchdb</id>
    <content type="html"><![CDATA[<p>
I posted a while back about <code>using CouchDB with Django</code><em>, talking about how one might build a lifestreaming application combining the flexibility and power of CouchDB</em> with the ease of use and utility of Django<em>.  I even linked to <code>the project on github</code></em>.  At the time I was taking a hard look at the Django-based software that was running this blog.  It needed some work, to say the least.  So I did a bit of cleanup, a LOT of reorganization, and integrated this CouchDB-based lifestreaming application into the mix.</p>

<p>There's no visual refresh--that will come some other time.  For right now, it's just a backend refresh, so for the most part nobody will notice anything.  But I can rest much easier knowing that the backend is just a little bit less of a mess.  It's also a LOT easier to deploy.  I've integrated a Fabric_ deployment script so that all I need to do is type:</p>

<p>.. code-block:: bash</p>

<pre><code>fab deploy
</code></pre>

<p>And everything gets zipped up, sent to the server, unziped, and all of the relevant processes get restarted.  Pretty cool!  That's going to allow for much more rapid iteration on the site, so changes can come more often and bugs can be fixed.</p>

<p>Because of that, expect more experimentation.  As I'm experimenting with Django stuff, I'll do a lot more public demos where the experimentations are public for the world to see and play around with.  I've got lots of ideas for Django-y experiments and it's going to be really fun to see how they shape up.</p>

<p>So what do you think?  Is the new lifestreaming stuff annoying or cool?</p>

<p>.. <em><code>using CouchDB with Django</code>: http://www.eflorenzano.com/blog/post/using-couchdb-django/
.. </em>CouchDB: http://incubator.apache.org/couchdb/
.. <em>Django: http://www.djangoproject.com/
.. </em><code>the project on github</code>: http://github.com/ericflo/django-couch-lifestream/tree/master
.. _Fabric: http://www.nongnu.org/fab/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XFN Markup Enabled]]></title>
    <link href="http://ericflo.github.com/blog/2008/02/05/xfn-markup-enabled/"/>
    <updated>2008-02-05T10:35:01-08:00</updated>
    <id>http://ericflo.github.com/blog/2008/02/05/xfn-markup-enabled</id>
    <content type="html"><![CDATA[<p>
The recently released <code>Google Social Graph API</code><em> was a bit of a wake-up call for me on the power and importance of microformats</em>.  So I've hacked together a quick implementation of XFN_ for the blogroll, and added a few <code>rel=me</code> links as well.</p>

<p>I'll follow this sometime soon with a post about how I implemented the XFN on a Django model.</p>

<p>.. <em><code>Google Social Graph API</code>: http://code.google.com/apis/socialgraph/
.. </em>microformats: http://microformats.org/
.. _XFN: http://gmpg.org/xfn/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XFN Markup Enabled]]></title>
    <link href="http://ericflo.github.com/blog/2008/02/05/xfn-markup-enabled/"/>
    <updated>2008-02-05T10:35:01-08:00</updated>
    <id>http://ericflo.github.com/blog/2008/02/05/xfn-markup-enabled</id>
    <content type="html"><![CDATA[<p>
The recently released <code>Google Social Graph API</code><em> was a bit of a wake-up call for me on the power and importance of microformats</em>.  So I've hacked together a quick implementation of XFN_ for the blogroll, and added a few <code>rel=me</code> links as well.</p>

<p>I'll follow this sometime soon with a post about how I implemented the XFN on a Django model.</p>

<p>.. <em><code>Google Social Graph API</code>: http://code.google.com/apis/socialgraph/
.. </em>microformats: http://microformats.org/
.. _XFN: http://gmpg.org/xfn/
</p>
]]></content>
  </entry>
  
</feed>
